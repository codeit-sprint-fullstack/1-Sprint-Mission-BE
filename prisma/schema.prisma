// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

model User {
  id               String    @id @unique @default(uuid())
  nickname         String
  email            String    @unique
  password         String
  refreshToken     String?
  createAt         DateTime  @default(now())
  updateAt         DateTime  @updatedAt
  comment          Comment[]
  product          Product[]
  favoriteproduct  Product[] @relation("UserFavorites")
  article          Article[]
  favoriteArticles Article[] @relation("Favorites")
}

model Article {
  id            String    @id @unique @default(uuid())
  title         String
  content       String
  createAt      DateTime  @default(now())
  updateAt      DateTime  @updatedAt
  favoriteCount Int       @default(0)
  comment       Comment[]
  favorited     User[]    @relation("Favorites")
  owner         User?     @relation(fields: [ownerId], references: [id])
  ownerId       String?
}

model Product {
  id            String    @id @unique @default(uuid())
  name          String
  description   String
  price         Int
  tag           String
  images        String[]
  createAt      DateTime  @default(now())
  updateAt      DateTime  @updatedAt
  favoriteCount Int       @default(0)
  comment       Comment[]
  favorited     User[]    @relation("UserFavorites")
  owner         User?     @relation(fields: [ownerId], references: [id])
  ownerId       String?
}

model Comment {
  id        String   @unique @default(uuid())
  content   String
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
  favorite  Int      @default(0)
  article   Article? @relation(fields: [articleId], references: [id], onDelete: SetNull)
  articleId String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    String?
  Product   Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
  productId String?
}
