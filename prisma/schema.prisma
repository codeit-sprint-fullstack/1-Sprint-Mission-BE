// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  email      String       @unique
  name       String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Comment    Comment[]
  freeBoard  FreeBoard[]
  fleaMarket FleaMarket[]
  Favorite   Favorite[]
}

model FreeBoard {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  images    String[]
  tags      String[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User?      @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    String?    @default("Anoymous")
  comment   Comment[]
  favorite  Favorite[]
}

model FleaMarket {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  images    String[]
  tags      String[]
  price     Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User?      @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    String?    @default("Anoymous")
  comment   Comment[]
  favorite  Favorite[]
}

model Comment {
  id           Int         @id @default(autoincrement())
  content      String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime?   @updatedAt
  user         User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId       String?     @default("Anoymous")
  freeBoard    FreeBoard?  @relation(fields: [freeBoardId], references: [id])
  freeBoardId  Int?
  fleaMarket   FleaMarket? @relation(fields: [fleaMarketId], references: [id])
  fleaMarketId Int?
}

model Favorite {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime?   @updatedAt
  user         User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId       String?     @default("Anoymous")
  freeBoard    FreeBoard?  @relation(fields: [freeBoardId], references: [id])
  freeBoardId  Int?
  fleaMarket   FleaMarket? @relation(fields: [fleaMarketId], references: [id])
  fleaMarketId Int?
}
